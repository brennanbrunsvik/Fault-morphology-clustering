import numpy as npimport matplotlib.pyplot as pltimport syssys.path.append('/Users/brennanbrunsvik/Documents/repositories/Base_code/mypython')plt.close('all')num = 50# theta = np.random.normal(loc = 0, scale = np.pi/4, size = num)theta = np.linspace(0, 2 * np.pi, num)theta = theta % (2 * np.pi)theta2 = (theta + np.pi/2) % (2*np.pi)plt.figure()ax = plt.subplot(221)ax.hist(np.rad2deg(theta))ax.set(xlabel = 'theta', ylabel = 'n', title = 'angle distribution', alpha = .5, label = 'theta 1')ax.hist(np.rad2deg(theta2))ax.set(xlabel = 'theta2', ylabel = 'n', title = 'angle distribution', alpha = .5, label = 'theta 2')def angle_to_unit_vector(theta):    x = np.cos(theta)     y = np.sin(theta)     return x, y x1, y1 = angle_to_unit_vector(theta)x2, y2 = angle_to_unit_vector(theta2)ax = plt.subplot(222) ax.quiver(np.zeros(x1.shape), np.zeros(x1.shape), x1, y1, units = 'xy')# ax.quiver(x2, y2)# ax.set(xlim = [-1, 1], ylim = [-1, 1])# ax.axis('equal')v1 = np.array([x1, y1]).Tv2 = np.array([x2, y2]).T vreal = np.array([1, 0])ax.quiver(vreal[0], vreal[1])x1 @ v1ax = plt.subplot(223)ax.scatter(np.rad2deg(theta), v1@vreal, label = '$v_1 v_{real}$') ax.scatter(np.rad2deg(theta), v2@vreal, label = '$v_2 v_{real}$')ax.scatter(np.rad2deg(theta), v1@vreal + v2@vreal, label = '$v_1 v_{real} + v_2 v_{real}$')ax.set(xlabel = '$\theta$')ax.legend()plt.tight_layout()